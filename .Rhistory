install.packages("Matching")
install.packages("Matching")
install.packages("Matching")
library(Matching)
install.packages("Matching")
install.packages("Matching")
a <- 5
head(a)
data(lalonde)
install.packages("Matching")
library(Matching)
data(lalonde)
?lalonde
dim(lalonde)
colnames(lalonde)
# 5. How many different variable types are represented in this data set?
table(lalonde)
# 5. How many different variable types are represented in this data set?
sum(lalonde)
# 5. How many different variable types are represented in this data set?
summary(lalonde)
# 5. How many different variable types are represented in this data set?
col(lalonde)
# 5. How many different variable types are represented in this data set?
dim(lalonde)
# 5. How many different variable types are represented in this data set?
dim(lalonde)[2]
# 5. How many different variable types are represented in this data set?
dim(lalonde)[,2]
lalonde[,2]
summary(lalonde)
lalonde.educ
lalonde['educ']
lalonde[2]
lalonde[2]
dim(lalonde)[2]
# 6. What's the maximum value of the re74 column? (re74 indicates the person's real earnings in 1974)
max(lalonde['re74'])
# 5. How many different variable types are represented in this data set?
length(unique(sapply(lalonde, class)))
### To see the different variable types:
for(i in 1:length(names(lalonde))) {cat( class(lalonde[,i]), "\n")}
### To count the unique types:
length(unique(sapply(lalonde, class)))
# 7. What's the minimum value of this column?
min(lalonde['r74'])
# 7. What's the minimum value of this column?
min(lalonde['re74'])
# 8. How many of the elements of this column are equal to zero?
sum(lalonde['re74' == 0])
# 8. How many of the elements of this column are equal to zero?
sum(lalonde['re74'] == 0)
# 9. How many elements of this column are less than $15000 OR greater than $20000?
sum(lalonde['re74'] < 15000) | sum(lalonde['re74'] > 20000)
sum(lalonde['re74'] < 15000 | (lalonde['re74'] > 20000)
sum(lalonde['re74'] < 15000 | (lalonde['re74'] > 20000)
sum(lalonde['re74'] < 15000 | (lalonde['re74'] > 20000))
colnames(lalonde)
# 10. How many people in this data set are married, earned zero real earnings in 1978, and have more than 12 years of education?
sum(lalonde['married'] & lalonde(['re74'] == 0) & lalonde(['educ'] > 12))
# 10. How many people in this data set are married, earned zero real earnings in 1978, and have more than 12 years of education?
sum(lalonde['married' == 1] & lalonde(['re74'] == 0) & lalonde(['educ'] > 12))
# 10. How many people in this data set are married, earned zero real earnings in 1978, and have more than 12 years of education?
sum(lalonde['married'] == 1) & lalonde(['re74'] == 0) & lalonde(['educ'] > 12))
# 10. How many people in this data set are married, earned zero real earnings in 1978, and have more than 12 years of education?
sum(lalonde['married'] == 1) & lalonde(['re74'] == 0) & lalonde(['educ'] > 12))
# 10. How many people in this data set are married, earned zero real earnings in 1978, and have more than 12 years of education?
sum((lalonde['married'] == 1) & lalonde(['re74'] == 0) & lalonde(['educ'] > 12))
# 10. How many people in this data set are married, earned zero real earnings in 1978, and have more than 12 years of education?
sum((lalonde['married'] == 1) & (lalonde(['re74'] == 0) & (lalonde(['educ'] > 12))
sum((lalonde$married == 1) & (lalonde$educ > 12) & (lalonde$re78 ==0))
# 10. How many people in this data set are married, earned zero real earnings in 1978, and have more than 12 years of education?
sum((lalonde['married'] == 1) & (lalonde(['re78'] == 0) & (lalonde(['educ'] > 12))
# 11. What is the interquartile range of "re78" (real earnings in 1978)? Use the "quantile()" function.
quantile($re78)
# 11. What is the interquartile range of "re78" (real earnings in 1978)? Use the "quantile()" function.
quantile(['re78'])
### upper-bound of the interquartile range:
quantile(lalonde$re78, 0.75)
quantile(lalonde['re78'], 0.75)
### lower-bound of the interquartile range:
quantile(lalonde$re78, 0.25)
quantile(lalonde['re78'], 0.25)
beaver(2)
# 15. Run a regression with 2 predictors, "age" and "educ", with re75 as the outcome (the "y").
# Interpret the 3 coefficients (of the intercept, and the 2 x variables).
?datasets
data(beaver2)
data(datasets.beaver2)
datasets
library(datasets)
data(datasets.beaver2)
library(help = "datasets")
datasets['beaver2']
datasets
library(datasets)
beaver2
library(datasets)
library(datasets)
beaver2
sum(beaver2)
total_boulder_days <- runif(200, min = 1, max = 75)
total_boulder_days
treatment_chalk
setwd("/Users/anggunberlian/Desktop/CS112")
setwd("/Users/anggunberlian/Desktop/CS112")
treatment_chalk
treatment_chalk <- sample(c(0, 1), 200, replace = TRUE)
treatment_chalk
smoke <- sample(c(0, 1), 998, replace = TRUE)
smoke
noise <- rnorm(998, mean = 0, sd = 0.7)
healthy <- noise - smoke
smoking <- sample(c(0, 1), 998, replace = TRUE)
noise <- rnorm(998, mean = 0, sd = 0.7)
healthy <- noise - smoking
healthy_smoking_relationship <- data.frame(healthy, smoking)
reg <- lm(healthy ~ smoking)
reg
reg$fitted.values
plot(smoking, healthy, xlab = "Smoking Treatment", ylab = "Healthy")
### Multilateral Development Institution Data
foo <- read.csv("https://tinyurl.com/yb4phxx8") # read in the data
# column names
names(foo)
# dimensions of the data set
dim(foo)
# quick look at the data structure
head(foo)
# take note of the columns representing calendar dates
date.columns <- c(11, 12, 14, 15, 16, 17, 18, 25)
for(i in date.columns) # loops through the "date.columns"
{
# Find missing values
which_values_are_missing <- which(as.character(foo[, i]) == "")
# Replace them by NAs
foo[which_values_are_missing , i] <- NA
# Turn values into dates
foo[, i] <- as.Date(as.character(foo[, i]))
}
# Try this yourself
foo[3,12]
# [1] "1968 -03 -13"
foo[4,12]
# [1] "1968 -07 -03"
foo [3 ,12] - foo [4 ,12]
# Check out the class of CirculationDate and 2009-01-01
class(foo$CirculationDate)
class(2009-01-01)
#  Find the data where we do not have NAs and the date is more than or equal to 2009
indices_2009 <- which(!is.na(foo$CirculationDate) &
foo$CirculationDate >= as.Date("2009-01-01", '%Y-%m-%d'))
# Our data now
foo$CirculationDate[indices_2009]
indices_2009
foo$CirculationDate[indices_2009]
new_foo <- foo[indices_2009, ]
# 1a. Is it true that the difference between Original Project Completion date and the Approval Date is (supposedly) approximately 24 months?
different_OCP_AP <- (new_foo$OriginalCompletionDate - new_foo$ApprovalDate) # num of pair-wise day difference
avg_days_OCP_AP <- mean(different_OCP_AP, na.rm = TRUE) # average days needed from Original Project Completion to approval
avg_month_OCP_AP <- as.numeric(avg_days_OCP_AP / 30) # average months needed
median_days_OCP_AP <- median(different_OCP_AP, na.rm = TRUE)
median_month_OCP_AP <- as.numeric(median_days_OCP_AP / 30)
avg_month_OCP_AP
median_month_OCP_AP
# 1a. Is it true that the project completion can be extended?
# 1a. Is it true that the difference between Revised Project Completion date & the Approval Date is larger than the difference between Original Project Completion date and the Approval Date?
different_RPC_AP <- (new_foo$RevisedCompletionDate - new_foo$ApprovalDate)
avg_days_RPC_AP <- mean(different_RPC_AP, n.rm=TRUE) # average days needed from Revised Project Completion to Approval, ignoring the NAs
avg_month_RPC_AP <- as.numeric(avg_days_RPC_AP / 30) # average months needed
avg_month_RPC_AP
avg_month_RPC_AP > avg_month_OCP_AP # checking if the difference between RPC and AP is indeed larger than the difference between OC and AP
# 1b. Has the length of project delay, measured as the difference between “OriginalCompletionDate” and “RevisedCompletionDate”, changed over time (consider projects circu- lated earlier and circulated later)?
y_delay <- as.numeric((new_foo$RevisedCompletionDate - new_foo$OriginalCompletionDate) / 30) # the delays in month
x <- new_foo$CirculationDate
plot(x, y_delay, xlab = "Circulation date (year)", ylab = "Average delay (months)", main = "The Plot of Length of Project Delay Overtime")
mean(y_delay, na.rm = TRUE) # na.rm -> to remove NA
median(y_delay, na.rm = TRUE)
quantile(y_delay, na.rm = TRUE)
# 1c. original planned project duration vs. actual duration
plot(density((as.numeric(different_OCP_AP[-which(is.na(different_OCP_AP))]) / 30)),
col = "red", lwd = 3, main = "Density Plot of The Planned vs. Actual Project Duration", xlab = "Duration (in months)")
lines(density((as.numeric(different_RPC_AP) / 30) ), col = "blue", lwd = 3 )
# stats for original planned project duration
mean_OCP_AP <- mean(as.numeric(different_OCP_AP[-which(is.na(different_OCP_AP))]) / 30)
mean_OCP_AP
median_OCP_AP <- median(as.numeric(different_OCP_AP[-which(is.na(different_OCP_AP))]) / 30)
median_OCP_AP
quantile_OCP_AP <- quantile(as.numeric(different_OCP_AP[-which(is.na(different_OCP_AP))]) / 30)
quantile_OCP_AP
# stats for actual planned project duration
mean_RPC_AP <- mean(as.numeric(different_RPC_AP) / 30)
mean_RPC_AP
median_RPC_AP <- median(as.numeric(different_RPC_AP) / 30)
median_RPC_AP
quantile_RPC_AP <- quantile(as.numeric(different_RPC_AP) / 30)
quantile_RPC_AP
# 2a. What % of projects completed between 2010 and now were rated 0?
sum(is.na(new_foo$RevisedCompletionDate) & !is.na(new_foo$OriginalCompletionDate))
# Data completed between 2010 and now
more_2010_revised_date <- which(!is.na(new_foo$RevisedCompletionDate) &
new_foo$RevisedCompletionDate >= as.Date("2010-01-01", '%Y-%m-%d'))
processed_meat <- rnorm(988, mean = 150, sd = 50)
processed_meat <- rnorm(988, mean = 150, sd = 100)
read.csv("observational_lalonde - observational_lalonde.csv")
new_lalonde <- read.csv("observational_lalonde - observational_lalonde.csv")
head(new_lalonde)
reg <- lm(re78 ~ treat, data = new_lalonde)
plot(reg)
reg <- lm(re78 ~ treat, data = new_lalonde)
reg1 <- lm(re78 ~ age, educ, married, treat, data = new_lalonde)
member <- read.csv("Member - Sheet1.csv")
new_lalonde <- read.csv("observational_lalonde - observational_lalonde.csv")
head(new_lalonde)
reg <- lm(re78 ~ treat, data = new_lalonde)
reg1 <- lm(re78 ~ age, educ, married, treat, data = new_lalonde)
member <- read.csv("Member - Sheet1.csv")
member <- read.csv("Member - Sheet1.csv")
non-member <- read.csv("Non-Member - Sheet1.csv")
setwd("/Users/anggunberlian/Desktop/CS112")
setwd("/Users/anggunberlian/Desktop/CS112")
setwd("/Users/anggunberlian/Desktop/CS112")
member <- read.csv("Member - Sheet1.csv")
member <- read.csv("Member - Sheet1-2.csv")
reg <- lm(re78 ~ treat, data = new_lalonde)
reg1 <- lm(re78 ~ age, educ, married, treat, data = new_lalonde)
reg <- lm(re78 ~ treat, data = new_lalonde)
reg <- lm(re78 ~ treat, data = new_lalonde)
reg1 <- lm(re78 ~ age, educ, married, treat, data = new_lalonde)
reg1 <- lm(re78 ~ age, educ, married, data = new_lalonde)
reg1 <- lm(re78 ~ age, educ, treat, married, data = new_lalonde)
reg1 <- lm(re78 ~ age, educ, treat, data = new_lalonde)
reg1
reg1 <- lm(re78 ~ treat, age, educ, data = new_lalonde)
reg1
?lalonde
